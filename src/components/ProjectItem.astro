---
import Browser from "../icons/Browser.astro";
import Github from "../icons/Github.astro";
import Social from "./Social.astro";

interface Tag {
  icon: any; // Replace 'any' with the actual type if known
  name: string;
}

const { title, description, livelink, github, image, tags } = Astro.props as {
  title: string;
  description: string;
  livelink: string;
  github: string;
  image: string;
  tags: Tag[];
};
---

<div
  class="w-full flex flex-col bg-white/5 border border-white/10 rounded-lg shadow hover:bg-white/10 transition md:flex-row dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700 hover:border-gray-300 light:border-gray-200 light:bg-white light:hover:bg-gray-50"
>
  <img
    class="object-cover w-[100%] rounded-t-lg h-96 md:h-auto md:w-48 md:rounded-none md:rounded-s-lg"
    src={image}
    alt={title}
  />
  <div
    class="flex flex-col justify-between p-4 leading-normal w-full md:w-auto"
  >
    <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-yellow-200">
      {title}
      {
        tags && (
          <div class="flex flex-row flex-wrap gap-x-2 mt-3">
            {tags.map((tag) => (
              <li class="list-none mb-5">
                <span class="flex gap-x-2 rounded-full text-xs font-normal text-gray-700 dark:text-white/80 bg-gray-200 dark:bg-white/5 py-2 px-3 items-center">
                  <tag.icon class="size-4 md:size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </div>
        )
      }
    </h5>
    <p class="text-sm font-normal text-gray-600 dark:text-gray-100 text-pretty">{description}</p>
    <div class="flex gap-4 mt-3 flex-wrap">
      <Social href={livelink}>
        <Browser class="size-4 md:size-6" />
        Live Site
      </Social>
      <Social href={github}>
        <Github class="size-4 md:size-6" />
        Github Repo
      </Social>
    </div>
  </div>
</div>
